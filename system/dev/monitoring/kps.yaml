# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: cluster-prometheus
#   namespace: argocd
# spec:
#   project: default
#   source:
#     repoURL: https://prometheus-community.github.io/helm-charts
#     chart: kube-prometheus-stack
#     targetRevision: 75.6.0
#     helm:
#       values: |
#         alertmanager:
#           config:
#           enabled: true
#           ingress:
#             annotations:
#               kubernetes.io/ingress.class: nginx
#             enabled: false
#             hosts:
#             #- alertmanager.xxx.k8s
#         crds:
#           enabled: true
#         defaultRules:
#           create: true
#           rules:
#             alertmanager: false
#             configReloaders: true
#             etcd: false
#             general: true
#             k8sContainerCpuUsageSecondsTotal: true
#             k8sContainerMemoryCache: true
#             k8sContainerMemoryRss: true
#             k8sContainerMemorySwap: true
#             k8sContainerMemoryWorkingSetBytes: true
#             k8sContainerResource: true
#             k8sPodOwner: true
#             kubeApiserverAvailability: false
#             kubeApiserverBurnrate: false
#             kubeApiserverHistogram: false
#             kubeApiserverSlos: false
#             kubeControllerManager: false
#             kubePrometheusGeneral: false
#             kubePrometheusNodeRecording: false
#             kubeProxy: false
#             kubeSchedulerAlerting: false
#             kubeSchedulerRecording: false
#             kubeStateMetrics: false
#             kubelet: false
#             kubernetesApps: true
#             kubernetesResources: true
#             kubernetesStorage: true
#             kubernetesSystem: true
#             network: false
#             node: true
#             nodeExporterAlerting: true
#             nodeExporterRecording: true
#             prometheus: false
#             prometheusOperator: false
#             windows: false
#         grafana:
#           adminPassword: "admin"
#           defaultDashboardsEditable: true
#           defaultDashboardsTimezone: Europe/Istanbul
#           enabled: true
#           ingress:
#             annotations:
#               kubernetes.io/ingress.class: nginx
#             enabled: true
#             hosts:
#             - grafana.example.com
#             path: /
#           persistence:
#             accessModes:
#             - ReadWriteOnce
#             enabled: false
#             size: 8Gi
#             type: pvc
#         prometheus:
#           enabled: true
#           ingress:
#             annotations:
#               kubernetes.io/ingress.class: nginx
#             enabled: true
#             hosts:
#             - prometheus.example.com
#           prometheusSpec:
#             additionalScrapeConfigs:
#             # - job_name: elasticsearch-exporter
#             #   static_configs:
#             #   - targets:
#             #     - 10.xxx.xxx.26:9114
#             #     - 10.xxx.xxx.27:9114
#             #     - 10.xxx.xxx.28:9114
#             # - job_name: node_exporter_elk
#             #   static_configs:
#             #   - targets:
#             #     - 10.xxx.xxx.29:9100
#             #     - 10.xxx.xxx.32:9100
#             #     - 10.xxx.xxx.26:9100
#             #     - 10.xxx.xxx.27:9100
#             #     - 10.xxx.xxx.28:9100
#             retention: 1d
#             retentionSize: 2GB
#             # storageSpec:
#             #   volumeClaimTemplate:
#             #     spec:
#             #       accessModes:
#             #       - ReadWriteOnce
#             #       resources:
#             #         requests:
#             #           storage: 150Gi
#   destination:
#     server: https://kubernetes.default.svc
#     namespace: monitoring              # change ns according to environmet
#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
#     syncOptions:
#       - CreateNamespace=true  